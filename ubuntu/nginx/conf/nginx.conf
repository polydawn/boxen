worker_processes  1;

events {
	worker_connections  1024;
}

http {
	#
	#	Setup
	#
	include mime.types;
	default_type  application/octet-stream;

	sendfile  on;
	tcp_nopush  on;           #Attempt to send response headers in one packet
	tcp_nodelay on;           #Turn off Nagle
	types_hash_max_size 2048; #Hash table size
	server_tokens off;        #Do not send version number
	keepalive_timeout  65;

	#Lose the WWWs
	server {
		listen 80;
		server_name ~^(www\.)(?<domain>.+)$;
		rewrite ^ $scheme://$domain$request_uri? permanent;
	}

	#Redirect HTTP to HTTPS
	server {
		listen 80 default_server;
		rewrite ^ https://$host$request_uri? permanent;
	}

	#
	#	Gzip
	#

	gzip on;
	gzip_disable "msie6";  #Old IE has problems with gzip
	gzip_http_version 1.1;
	gzip_comp_level 2;     #Compression level (1-9)
	gzip_proxied any;      #If gzip is applicable, always do it
	# gzip_vary on;        #Turning this on would help proxies serve old browsers

	#Compress these types in addition to text/html
	gzip_types text/plain text/css text/javascript text/xml application/json application/x-javascript application/xml application/xml+rss;

	#
	#	SSL
	#

	#These are auto-generated and are not secure!
	# Command used: 'openssl req -new -x509 -nodes -out insecure.crt -keyout insecure.key'
	ssl_certificate     /service/conf/certs/insecure.crt;
	ssl_certificate_key /service/conf/certs/insecure.key;

	#Without SSL session caching, clients must re-negotiate every connection.
	ssl_session_cache   shared:SSL:10m;
	ssl_session_timeout 5m;

	#Some less-terrible-than-default settings.
	# Not a lot of effort has been put into validating this server's configuration yet.
	# If you're planning to use this in a professional or sensitive environment, do your research!
	# Source: https://community.qualys.com/blogs/securitylabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
	ssl_prefer_server_ciphers on;

	#
	#	Server(s)
	#

	#Your default
	server {
		ssl on;
		listen 443 default_server;
		server_name localhost;

		location / {
			root   /service/data;
			index  index.html index.htm;
		}

		# try_files $uri $uri/ /index.html;
	}
}
